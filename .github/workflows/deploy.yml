name: Deploy to Production

# mainブランチへのプッシュ or 手動実行で起動
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🏗️ Build application
      run: npm run build
      env:
        NODE_ENV: production
    
    # Vercelデプロイ（環境変数設定後に有効化）
    # - name: 🚀 Deploy to Vercel
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
    #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
    #     vercel-args: '--prod'
    #     working-directory: ./
    
    - name: 📢 Deployment notification
      if: always()
      run: |
        echo "🎉 Deployment to ${{ github.event.inputs.environment || 'production' }} completed!"
        echo "Status: ${{ job.status }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"

  # Cloudflare Workers用（将来的に）
  # deploy-cloudflare:
  #   name: Deploy to Cloudflare Workers
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Deploy to Cloudflare Workers
  #       uses: cloudflare/wrangler-action@v3
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}